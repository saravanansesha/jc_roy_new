{"version":3,"sources":["components/BreadCrumbs.js","routes/Basic_Valve_Parameters/Add_size.js","routes/Basic_Valve_Parameters/Size.js","routes/Basic_Valve_Parameters/Add_bore.js","routes/Basic_Valve_Parameters/Bore.js","routes/Basic_Valve_Parameters/Add_class.js","routes/Basic_Valve_Parameters/Class.js","routes/Basic_Valve_Parameters/Add_Working_Pressure.js","routes/Basic_Valve_Parameters/Working_Pressure.js","routes/Basic_Valve_Parameters/Add_End_Connection.js","routes/Basic_Valve_Parameters/End_Connection.js","routes/Basic_Valve_Parameters/Add_Operator_Type.js","routes/Basic_Valve_Parameters/Operator_Type.js","routes/Basic_Valve_Parameters/index.js"],"names":["BreadCrumb","props","className","children","Option","Select","Add_size","OptGroup","useLocation","FormItem","Form","Item","setvisible","isvisible","useState","clear","setclear","useForm","form","useEffect","resetFields","title","footer","visible","onCancel","initialValues","remember","name","onFinish","values","layout","rules","required","message","placeholder","onChange","value","console","log","type","htmlType","Size","match","data","foredit","setforedit","isedit","setisedit","key","size","status","permissions","action","data_back","setdata","columns","dataIndex","render","text","row","index","filter","item","length","find_key","i","value1","indexOf","setFieldsValue","colSpan","datason","map","forchange","remoedit","onFinishFailed","label","style","width","onClick","items","String","created","modified","background","border","color","fontWeight","marginRight","id","e","edit_field","target","getAttribute","data-index","for_databack","j","change_for_edit","display","justifyContent","marginBottom","pagination","pageSize","dataSource","Add_bore","Bore","bore","Add_class","Class","class","Add_Working_Pressure","Working_Pressure","Add_End_Connection","End_Connection","Add_Operator_Type","Operator_Type","TabPane","Tabs","Basic_Valve_Parameters","keys","setkeys","to","activeKey","tab"],"mappings":"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","file":"static/js/10.644dfa7c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet BreadCrumb = (props) =>{\r\n\r\n    return (\r\n        <div className=\"bread_crumb\">\r\n{props.children}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BreadCrumb;","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_size = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your Size!\\'}' }]} name={`size`}>\r\n\r\n            <Input placeholder=\"Size\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_size;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../sizes/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_size from \"./Add_size\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Size = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      size: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      size: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      size: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      size: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      size: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      size: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Size',\r\n      dataIndex: 'size',\r\n      key: 'size',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`size${index}`] = value1[0].size\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.size = values[`size${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Size `} rules={[{ required: true, message: 'Please input your size !\\'}' }]} name={`size${index}`}>\r\n\r\n<Input placeholder=\"Size \"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          size : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          size : item.size,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_size setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Size;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_bore = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your bore!\\'}' }]} name={`bore`}>\r\n\r\n            <Input placeholder=\"Bore\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_bore;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../bores/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_bore from \"./Add_bore\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Bore = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      bore: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      bore: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      bore: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      bore: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      bore: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      bore: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Bore',\r\n      dataIndex: 'bore',\r\n      key: 'bore',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`bore${index}`] = value1[0].bore\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.bore = values[`bore${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Bore`} rules={[{ required: true, message: 'Please input your Bore!\\'}' }]} name={`bore${index}`}>\r\n\r\n<Input placeholder=\"Bore\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          bore : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          bore : item.bore,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_bore setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Bore;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_class = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your Class!\\'}' }]} name={`class`}>\r\n\r\n            <Input placeholder=\"Class\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_class;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../classs/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_class from \"./Add_class\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Class = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      class: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      class: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      class: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      class: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      class: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      class: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Class',\r\n      dataIndex: 'class',\r\n      key: 'class',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`class${index}`] = value1[0].class\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.class = values[`class${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Class`} rules={[{ required: true, message: 'Please input your Class!\\'}' }]} name={`class${index}`}>\r\n\r\n<Input placeholder=\"Class\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          class : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          class : item.class,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_class setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Class;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_Working_Pressure = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your Working Pressure Name!\\'}' }]} name={`Working_Pressure`}>\r\n\r\n            <Input placeholder=\"Working Pressure Name\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_Working_Pressure;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../Working_Pressures/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_Working_Pressure from \"./Add_Working_Pressure\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Working_Pressure = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      Working_Pressure: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      Working_Pressure: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      Working_Pressure: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      Working_Pressure: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      Working_Pressure: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      Working_Pressure: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Working Pressure Name',\r\n      dataIndex: 'Working_Pressure',\r\n      key: 'Working_Pressure',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`Working_Pressure${index}`] = value1[0].Working_Pressure\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.Working_Pressure = values[`Working_Pressure${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Working Pressure `} rules={[{ required: true, message: 'Please input your Working_Pressure !\\'}' }]} name={`Working_Pressure${index}`}>\r\n\r\n<Input placeholder=\"Working Pressure \"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          Working_Pressure : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          Working_Pressure : item.Working_Pressure,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_Working_Pressure setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Working_Pressure;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_End_Connection = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your End Connection!\\'}' }]} name={`End_Connection`}>\r\n\r\n            <Input placeholder=\"End Connection\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_End_Connection;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../End_Connections/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_End_Connection from \"./Add_End_Connection\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst End_Connection = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      End_Connection: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      End_Connection: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      End_Connection: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      End_Connection: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      End_Connection: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      End_Connection: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'End Connection',\r\n      dataIndex: 'End_Connection',\r\n      key: 'End_Connection',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`End_Connection${index}`] = value1[0].End_Connection\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.End_Connection = values[`End_Connection${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`End Connection `} rules={[{ required: true, message: 'Please input your End Connection !\\'}' }]} name={`End_Connection${index}`}>\r\n\r\n<Input placeholder=\"End Connection \"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          End_Connection : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          End_Connection : item.End_Connection,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_End_Connection setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default End_Connection;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_Operator_Type = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your Operator Type!\\'}' }]} name={`Operator_Type`}>\r\n\r\n            <Input placeholder=\"Operator Type\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_Operator_Type;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\n// import {Link,useLocation} from \"react-router-dom\";\r\n// import IntlMessages from \"util/IntlMessages\";\r\n// import BreadCrumb from \"../../Operator_Types/BreadCrumbs\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Add_Operator_Type from \"./Add_Operator_Type\"\r\n// const DesignStandard = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Operator_Type = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      Operator_Type: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      Operator_Type: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      Operator_Type: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      Operator_Type: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      Operator_Type: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      Operator_Type: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Operator Type Name',\r\n      dataIndex: 'Operator_Type',\r\n      key: 'Operator_Type',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`Operator_Type${index}`] = value1[0].Operator_Type\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.Operator_Type = values[`Operator_Type${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Operator Type`} rules={[{ required: true, message: 'Please input your Operator Type !\\'}' }]} name={`Operator_Type${index}`}>\r\n\r\n<Input placeholder=\"Operator Type\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          Operator_Type : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          Operator_Type : item.Operator_Type,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_Operator_Type setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Operator_Type;\r\n","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setdrawer from \"../../containers/Sidebar/setdrawer\"\r\n// import DesignStandard from \"./DesignStandard\";\r\nimport Size from \"./Size\"\r\nimport Bore from \"./Bore\"\r\nimport  Class  from \"./Class\";\r\nimport  Working_Pressure  from \"./Working_Pressure\";\r\nimport  End_Connection  from \"./End_Connection\";\r\nimport  Operator_Type  from \"./Operator_Type\";\r\n// import TestingStandard from \"./TestingStandard\"\r\n// import SpecialTestingStandard from \"./SpecialTestingStandard\"\r\n// import Plants from \"./Plants\"\r\n// import Department from \"./Department\"\r\n// import Employees from \"./Employees\"\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Basic_Valve_Parameters = ({match}) => {\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  return (\r\n    <div>\r\n<BreadCrumb> <i className=\"icon icon-menu-right\"/> <Link to=\"/sample\">Home</Link><i className=\"icon icon-menu-right\"/> <span onClick={()=>setvisible(true)}>Settings</span><i className=\"icon icon-menu-right\"/><Link to=\"/Basic_Valve_Parameters\">Basic Valve Parameters</Link>  </BreadCrumb>\r\n{/* <div className=\"bread_crumb\"> */}\r\n<Tabs className=\"customize_tab\"  activeKey={keys} onChange={callback}>\r\n        <TabPane tab=\"Size\" key=\"1\"><Size /> </TabPane>\r\n        <TabPane tab=\"Bore\" key=\"2\"><Bore /></TabPane>\r\n        <TabPane tab=\"Class\" key=\"3\"><Class /></TabPane>\r\n        <TabPane tab=\"Working Pressure\" key=\"4\"><Working_Pressure /></TabPane>\r\n        <TabPane tab=\"End Connection\" key=\"5\"><End_Connection /></TabPane>\r\n        <TabPane tab=\"Operator Type\" key=\"6\"><Operator_Type /></TabPane>\r\n        {/* <TabPane tab=\"Employees\" key=\"4\"> <Employees /> </TabPane>\r\n        <TabPane tab=\"Suppliers\" key=\"5\">Content of Tab Pane 3</TabPane>\r\n        <TabPane tab=\"Customers\" key=\"6\">Content of Tab Pane 3</TabPane> */}\r\n      </Tabs> \r\n      <Setdrawer setvisible={setvisible} isvisible={isvisible} />\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Basic_Valve_Parameters; "],"sourceRoot":""}