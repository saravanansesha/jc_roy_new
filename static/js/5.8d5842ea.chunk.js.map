{"version":3,"sources":["components/BreadCrumbs.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","routes/Basic_Settings/Add_product_group.js","routes/Basic_Settings/product_group.js","routes/Basic_Settings/Add_plant.js","routes/Basic_Settings/Plants.js","routes/Basic_Settings/Add_department.js","routes/Basic_Settings/Department.js","routes/Basic_Settings/edit_employee.js","routes/Basic_Settings/Add_employee.js","routes/Basic_Settings/Employees.js","routes/Basic_Settings/index.js"],"names":["BreadCrumb","props","className","children","Row","Col","Option","Select","Setproductadd","OptGroup","useLocation","FormItem","Form","Item","setvisible","isvisible","useState","clear","setclear","useForm","form","useEffect","resetFields","footer","visible","initialValues","remember","name","onFinish","values","layout","rules","required","message","placeholder","onChange","value","console","log","type","htmlType","Tabs","TabPane","Product_group","match","data","foredit","setforedit","isedit","setisedit","key","role","status","permissions","action","data_back","setdata","columns","title","dataIndex","render","text","row","index","filter","item","length","find_key","i","value1","indexOf","setFieldsValue","colSpan","datason","map","forchange","remoedit","onFinishFailed","label","style","width","onClick","items","String","created","modified","background","border","color","fontWeight","marginRight","id","e","edit_field","target","getAttribute","data-index","for_databack","j","change_for_edit","display","justifyContent","marginBottom","pagination","pageSize","dataSource","Add_product_group","Add_plant","Plants","Add_department","Department","Edit_employee","prefill","setprefill","imgsrc","setimgsrc","handleChange","pop_upedit","firstname","lastname","email","plant","depart","manage_rep","dep_head","plant_head","ccr","password","resetfields","onCancel","editinformation","md","reader","FileReader","readAsDataURL","files","onload","result","accept","src","Add_employee","setaddvisible","addisvisible","Employees","setpop_upedit","employee","profile","updatepack","Basic_Settings","keys","setkeys","to","activeKey","tab"],"mappings":"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","file":"static/js/5.8d5842ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet BreadCrumb = (props) =>{\r\n\r\n    return (\r\n        <div className=\"bread_crumb\">\r\n{props.children}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BreadCrumb;","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Setproductadd = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            // title=\"Basic Modal\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            // onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            <center><h1>Product Group Form</h1></center>\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`title`}>\r\n\r\n            <Input placeholder=\"Title\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Setproductadd;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setproductadd from \"./Setproductadd\"\r\nimport Add_product_group from \"./Add_product_group\"\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Product_group = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      role: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      role: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      role: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      role: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      role: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      role: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`roles${index}`] = value1[0].role\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.role = values[`roles${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Title`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`roles${index}`}>\r\n\r\n<Input placeholder=\"Title\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          role : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          role : item.role,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_product_group setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Product_group;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_plant = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            // title=\"Basic Modal\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            // onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            <center><h1>Product Group Form</h1></center>\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`title`}>\r\n\r\n            <Input placeholder=\"Title\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_plant;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setproductadd from \"./Setproductadd\"\r\nimport Add_plant from \"./Add_plant\"\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Plants = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      role: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      role: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      role: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      role: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      role: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      role: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Title',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`roles${index}`] = value1[0].role\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.role = values[`roles${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Title`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`roles${index}`}>\r\n\r\n<Input placeholder=\"Title\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          role : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          role : item.role,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_plant setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Plants;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_department = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        setvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            // title=\"Basic Modal\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            // onCancel={()=>setvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            <center><h1>Product Group Form</h1></center>\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`name`}>\r\n\r\n            <Input placeholder=\"Name\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_department;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setproductadd from \"./Setproductadd\"\r\nimport Add_department from \"./Add_department\"\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Department = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      name: 'Test1',\r\n      status: 'inactive',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      name: 'Test2',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      status: 'active',\r\n      name: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      status: 'active',\r\n      name: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      name: 'Test5',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      name: 'Test6',\r\n      status: 'active',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`name${index}`] = value1[0].name\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.name = values[`name${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Name`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`name${index}`}>\r\n\r\n<Input placeholder=\"Name\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    // {\r\n    //   title: 'Created',\r\n    //   dataIndex: 'created',\r\n    //   key: 'created',\r\n      \r\n    \r\n    // },\r\n    // {\r\n    //     title: 'Modified',\r\n    //     dataIndex: 'modified',\r\n    //     key: 'modified',\r\n        \r\n      \r\n    //   },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          name : '',\r\n        //   created : '',\r\n        //   modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          name : item.name,\r\n        //   created : '06-09-2022',\r\n        //   modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Add_department setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Department;\r\n","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select,Upload, Input,Radio,Col, Row} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Edit_employee = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setvisible,isvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    const [prefill,setprefill] = useState(0)\r\n    const [imgsrc,setimgsrc] = useState('')\r\n    console.log('for edit employee',props.pop_upedit)\r\n    // useEffect(()=>{\r\n    // if(clear == 0){\r\n    //     form.resetFields()\r\n    //     setclear(1)\r\n    // }\r\n    // },[clear])\r\n    useEffect(()=>{\r\n        // alert(props.pop_upedit)\r\n        if(prefill == 0 && props.pop_upedit ){\r\n            \r\n            form.setFieldsValue({\r\n                firstname : props.pop_upedit.firstname,\r\n                lastname : props.pop_upedit.lastname,\r\n                email : props.pop_upedit.email,\r\n                plant : props.pop_upedit.plant,\r\n                depart : props.pop_upedit.depart,\r\n                role : props.pop_upedit.role,\r\n                manage_rep : props.pop_upedit.manage_rep,\r\n                dep_head : props.pop_upedit.dep_head,\r\n                plant_head : props.pop_upedit.plant_head,\r\n                ccr : props.pop_upedit.ccr,\r\n                status : props.pop_upedit.status,\r\n                password : props.pop_upedit.password\r\n            })\r\n            setprefill(1)\r\n        }\r\n\r\n    },[props.pop_upedit])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        props.editinformation(values,props.pop_upedit.key)\r\n        setvisible(false)\r\n        setprefill(0)\r\n        // prefill\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    const resetfields = async () =>{\r\n        form.resetFields()\r\n        // alert(1)\r\n    }\r\n    // alert(isvisible)\r\n    return(\r\n        <>\r\n        <div >\r\n        <Modal\r\n            title=\"Employee Edit\"\r\n            className=\"for_long_edit\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={ async() =>{\r\n\r\n                 await resetfields();\r\n            //    aa = 88\r\n                setvisible(false)\r\n              }\r\n            }\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Employee Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nclassName={'big_forms'}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <Row>\r\n        <Col md={8} >\r\n    <FormItem label='First Name'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`firstname`}>\r\n\r\n            <Input placeholder=\"First Name\"/>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n    <FormItem label='Last Name'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`lastname`}>\r\n\r\n<Input placeholder=\"Last Name\"/>\r\n</FormItem>\r\n\r\n    </Col>\r\n    <Col md={8}>\r\n\r\n    {/* <div className=\"submit_popup\"> */}\r\n    <FormItem label='Email'  rules={[{\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },{ required: true, message: 'Please input your title!\\'}' }]} name={`email`}>\r\n\r\n<Input placeholder=\"E-Mail\"/>\r\n</FormItem>\r\n    \r\n        \r\n        \r\n        {/* <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button> */}\r\n\r\n    {/* </div> */}\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Plant'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`plant`}>\r\n            <Select\r\n                placeholder=\"Plant\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"plant1\">Plant1</Option>\r\n                <Option value=\"plant2\">Plant2</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Department'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`depart`}>\r\n            <Select\r\n                placeholder=\"Department\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"depart\">depart</Option>\r\n                <Option value=\"depart1\">depart1</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Role'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`role`}>\r\n            <Select\r\n                placeholder=\"Role\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"role\">Role</Option>\r\n                <Option value=\"role1\">Role1</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Plant Head'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`plant_head`}>\r\n            <Select\r\n                placeholder=\"Plant Head\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Department Head'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`dep_head`}>\r\n            <Select\r\n                placeholder=\"Department Head\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Management Representatives'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`manage_rep`}>\r\n            <Select\r\n                placeholder=\"Management Representatives\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Customer Complaints Representatives'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`ccr`}>\r\n            <Select\r\n                placeholder=\"Customer Complaints Representatives\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Status'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Actual Password : 132345'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`password`}>\r\n        <Input \r\n                 type=\"password\"\r\n                 placeholder=\"Only enter if you want to change the password\"/>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <div className=\"upload_dp\">\r\n                 <div className=\"upload_dp_1\">\r\n                 {imgsrc == ''  ? \r\n                  (<>    <span>+</span>\r\n                    <span>Upload</span>\r\n                    <input type={'file'} onChange={(e)=>{\r\n                        let reader = new FileReader();\r\n                        reader.readAsDataURL(e.target.files[0]);\r\n                        reader.onload = function () {\r\n                            setimgsrc(reader.result)\r\n                        };\r\n                       }} accept=\"image/png, image/gif, image/jpeg\"> \r\n                       </input> </>)  :\r\n                        <img className=\"uploaded_image\" src={imgsrc}></img> }\r\n                    \r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Col >\r\n        <Col className=\"update\" md={8}>\r\n            <div>\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Update\r\n        </Button>\r\n        </div>\r\n        </Col>\r\n        <Col md={8}>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        \r\n    <div className=\"submit_popup\">\r\n    \r\n    </div>\r\n    </Row>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit_employee;","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select,Upload, Input,Radio,Col, Row} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_employee = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setaddvisible,addisvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    const [prefill,setprefill] = useState(0)\r\n    const [imgsrc,setimgsrc] = useState('')\r\n    console.log('for edit employee',props.pop_upedit)\r\n    // useEffect(()=>{\r\n    // if(clear == 0){\r\n    //     form.resetFields()\r\n    //     setclear(1)\r\n    // }\r\n    // },[clear])\r\n    useEffect(()=>{\r\n        // alert(props.pop_upedit)\r\n        // if(prefill == 0 && props.pop_upedit ){\r\n            \r\n        //     form.setFieldsValue({\r\n        //         firstname : props.pop_upedit.firstname,\r\n        //         lastname : props.pop_upedit.lastname,\r\n        //         email : props.pop_upedit.email,\r\n        //         plant : props.pop_upedit.plant,\r\n        //         depart : props.pop_upedit.depart,\r\n        //         role : props.pop_upedit.role,\r\n        //         manage_rep : props.pop_upedit.manage_rep,\r\n        //         dep_head : props.pop_upedit.dep_head,\r\n        //         plant_head : props.pop_upedit.plant_head,\r\n        //         ccr : props.pop_upedit.ccr,\r\n        //         status : props.pop_upedit.status,\r\n        //         password : props.pop_upedit.password\r\n        //     })\r\n        //     setprefill(1)\r\n        // }\r\n\r\n    },[props.pop_upedit])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        // props.editinformation(values,props.pop_upedit.key)\r\n        setaddvisible(false)\r\n        setprefill(0)\r\n        // prefill\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    const resetfields = async () =>{\r\n        form.resetFields()\r\n        // alert(1)\r\n    }\r\n    // alert(addisvisible)\r\n    return(\r\n        <>\r\n        <div >\r\n        <Modal\r\n            title=\"Add Employee\"\r\n            className=\"for_long_edit\"\r\n            footer={false}\r\n            visible={addisvisible}\r\n            // onOk={()=>setaddvisible(false)}\r\n            onCancel={ async() =>{\r\n\r\n                 await resetfields();\r\n            //    aa = 88\r\n                setaddvisible(false)\r\n              }\r\n            }\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Employee Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nclassName={'big_forms'}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <Row>\r\n        <Col md={8} >\r\n    <FormItem label='First Name'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`firstname`}>\r\n\r\n            <Input placeholder=\"First Name\"/>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n    <FormItem label='Last Name'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`lastname`}>\r\n\r\n<Input placeholder=\"Last Name\"/>\r\n</FormItem>\r\n\r\n    </Col>\r\n    <Col md={8}>\r\n\r\n    {/* <div className=\"submit_popup\"> */}\r\n    <FormItem label='Email'  rules={[{\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },{ required: true, message: 'Please input your title!\\'}' }]} name={`email`}>\r\n\r\n<Input placeholder=\"E-Mail\"/>\r\n</FormItem>\r\n    \r\n        \r\n        \r\n        {/* <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button> */}\r\n\r\n    {/* </div> */}\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Plant'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`plant`}>\r\n            <Select\r\n                placeholder=\"Plant\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"plant1\">Plant1</Option>\r\n                <Option value=\"plant2\">Plant2</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Department'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`depart`}>\r\n            <Select\r\n                placeholder=\"Department\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"depart\">depart</Option>\r\n                <Option value=\"depart1\">depart1</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Role'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`role`}>\r\n            <Select\r\n                placeholder=\"Role\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"role\">Role</Option>\r\n                <Option value=\"role1\">Role1</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Plant Head'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`plant_head`}>\r\n            <Select\r\n                placeholder=\"Plant Head\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Department Head'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`dep_head`}>\r\n            <Select\r\n                placeholder=\"Department Head\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Management Representatives'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`manage_rep`}>\r\n            <Select\r\n                placeholder=\"Management Representatives\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <FormItem label={'Customer Complaints Representatives'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`ccr`}>\r\n            <Select\r\n                placeholder=\"Customer Complaints Representatives\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"yes\">Yes</Option>\r\n                <Option value=\"no\">No</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Status'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">Active</Option>\r\n                <Option value=\"inactive\">Inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label={'Actual Password : 132345'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`password`}>\r\n        <Input \r\n                 type=\"password\"\r\n                 placeholder=\"Only enter if you want to change the password\"/>\r\n    </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n            <div className=\"upload_dp\">\r\n                 <div className=\"upload_dp_1\">\r\n                 {imgsrc == ''  ? \r\n                  (<>    <span>+</span>\r\n                    <span>Upload</span>\r\n                    <input type={'file'} onChange={(e)=>{\r\n                        let reader = new FileReader();\r\n                        reader.readAsDataURL(e.target.files[0]);\r\n                        reader.onload = function () {\r\n                            setimgsrc(reader.result)\r\n                        };\r\n                       }} accept=\"image/png, image/gif, image/jpeg\"> \r\n                       </input> </>)  :\r\n                        <img className=\"uploaded_image\" src={imgsrc}></img> }\r\n                    \r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Col >\r\n        <Col className=\"update\" md={8}>\r\n            <div>\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n        </div>\r\n        </Col>\r\n        <Col md={8}>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        \r\n    <div className=\"submit_popup\">\r\n    \r\n    </div>\r\n    </Row>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_employee;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setproductadd from \"./Setproductadd\"\r\nimport Edit_employee from \"./edit_employee\"\r\nimport Add_employee from \"./Add_employee\"\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Employees = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const [pop_upedit,setpop_upedit] = useState()\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [addisvisible,setaddvisible] = useState(false)\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      employee: 'Test1',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n      status: 'inactive',\r\n      password: '12345',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      employee: 'Test1',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n    //   name: 'Test2',\r\n      status: 'active',\r\npassword: '12345',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      employee: 'Test1',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n      status: 'active',\r\npassword: '12345',\r\n    //   name: 'Test3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      employee: 'Test1',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n      status: 'active',\r\npassword: '12345',\r\n    //   name: 'Test4',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      employee: 'Test1',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n    //   name: 'Test5',\r\n      status: 'active',\r\npassword: '12345',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      employee: 'Test1',\r\n      firstname: 'radha keishnan',\r\n      lastname:'arul subramaniyam',\r\n      id: '1111',\r\n      plant: 'plant1',\r\n      depart:'depart',\r\n      role:'role',\r\n      plant_head:'no',\r\n      dep_head: 'no',\r\n      manage_rep: 'no',\r\n      ccr: 'no',\r\n      email: 'ss@ss.com',\r\n      profile : '',\r\n    //   name: 'Test6',\r\n      status: 'active',\r\npassword: '12345',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Employee',\r\n      dataIndex: 'employee',\r\n      key: 'employee',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`name${index}`] = value1[0].name\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.name = values[`name${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Name`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`name${index}`}>\r\n\r\n<Input placeholder=\"Name\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    \r\n    {\r\n        title: 'Id',\r\n        dataIndex: 'id',\r\n        key: 'id',    \r\n    },\r\n    {\r\n    title: 'Plant',\r\n    dataIndex: 'plant',\r\n    key: 'plant',    \r\n    },\r\n    {\r\n    title: 'Depart',\r\n    dataIndex: 'depart',\r\n    key: 'depart',    \r\n    },\r\n    {\r\n    title: 'Role',\r\n    dataIndex: 'role',\r\n    key: 'role',    \r\n    },\r\n    {\r\n    title: 'Plant Head',\r\n    dataIndex: 'plant_head',\r\n    key: 'plant_head',    \r\n    },\r\n    {\r\n        title: 'Dep Head',\r\n        dataIndex: 'dep_head',\r\n        key: 'dep_head',    \r\n    },\r\n    {\r\n        title: 'Manage Rep',\r\n        dataIndex: 'manage_rep',\r\n        key: 'manage_rep',    \r\n    },\r\n    {\r\n        title: 'CCR',\r\n        dataIndex: 'ccr',\r\n        key: 'ccr',    \r\n    },    \r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          name : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          employee : item.employee,\r\n          id: item.id,\r\n          plant : item.plant,\r\n          depart : item.depart,\r\n          role : item.role,\r\n          plant_head : item.plant_head,\r\n          dep_head : item.dep_head,\r\n          manage_rep : item.manage_rep,\r\n          ccr : item.ccr,   \r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setpop_upedit(item)\r\n            setvisible(true)\r\n            // setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  function editinformation(values,key){\r\n      let updatepack = data_back.map((item)=>{\r\n        if(item.key == key){\r\n          return     {\r\n            key: item.key,\r\n            firstname: values.firstname,\r\n            lastname: values.lastname,\r\n            employee: 'Test1',\r\n            id: '1111',\r\n            plant: values.plant,\r\n            depart:values.depart,\r\n            role:values.role,\r\n            plant_head: values.plant_head,\r\n            dep_head: values.dep_head,\r\n            manage_rep: values.manage_rep,\r\n            ccr: values.ccr,\r\n            email: values.email,\r\n            profile : '',\r\n            status: values.status,\r\n            password: values.password,\r\n            permissions : item.permissions,\r\n            action : <div>\r\n              <button>\r\n                  Edit\r\n              </button>\r\n              <button>\r\n                  Delete\r\n              </button>\r\n            </div>,\r\n          }\r\n        }else{\r\n          return item\r\n        }\r\n      })\r\n      setdata(updatepack);\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:`15px`,marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setaddvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Edit_employee editinformation={editinformation} pop_upedit={pop_upedit} setvisible={setvisible} isvisible={isvisible} />\r\n<Add_employee setaddvisible={setaddvisible} addisvisible={addisvisible} />\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Employees;\r\n","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setdrawer from \"../../containers/Sidebar/setdrawer\"\r\nimport Product_group from \"./product_group\";\r\nimport Plants from \"./Plants\"\r\nimport Department from \"./Department\"\r\nimport Employees from \"./Employees\"\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Basic_Settings = ({match}) => {\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  return (\r\n    <div>\r\n<BreadCrumb> <i className=\"icon icon-menu-right\"/> <Link to=\"/sample\">Home</Link><i className=\"icon icon-menu-right\"/> <span onClick={()=>setvisible(true)}>Settings</span><i className=\"icon icon-menu-right\"/><Link to=\"/Basic_Settings\">Basic Settings</Link>  </BreadCrumb>\r\n{/* <div className=\"bread_crumb\"> */}\r\n<Tabs className=\"customize_tab\"  activeKey={keys} onChange={callback}>\r\n        <TabPane tab=\"Product Group\" key=\"1\"><Product_group /> </TabPane>\r\n        <TabPane tab=\"Plants\" key=\"2\"><Plants /></TabPane>\r\n        <TabPane tab=\"Department\" key=\"3\"><Department /></TabPane>\r\n        <TabPane tab=\"Employees\" key=\"4\"> <Employees /> </TabPane>\r\n        <TabPane tab=\"Suppliers\" key=\"5\">Content of Tab Pane 3</TabPane>\r\n        <TabPane tab=\"Customers\" key=\"6\">Content of Tab Pane 3</TabPane>\r\n      </Tabs> \r\n      {/* <Card className=\"gx-card\" title=\"Basic\">\r\n      <Tabs  activeKey={keys} onChange={callback}>\r\n        <TabPane tab=\"Tab 1\" key=\"1\">Content of Tab Pane 1</TabPane>\r\n        <TabPane tab=\"Tab 2\" key=\"2\">Content of Tab Pane 2</TabPane>\r\n        <TabPane tab=\"Tab 3\" key=\"3\">Content of Tab Pane 3</TabPane>\r\n      </Tabs>\r\n    </Card> */}\r\n      {/* </div> */}\r\n      {/* <h2 className=\"title gx-mb-4\"><IntlMessages id=\"sidebar.samplePage\"/></h2>\r\n\r\n      <div className=\"gx-d-flex justify-content-center\">\r\n        <h4>Basic_Settings</h4>\r\n      </div> */}\r\n      {/* <Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/> */}\r\n      <Setdrawer setvisible={setvisible} isvisible={isvisible} />\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Basic_Settings;\r\n"],"sourceRoot":""}