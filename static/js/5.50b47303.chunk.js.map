{"version":3,"sources":["components/BreadCrumbs.js","../node_modules/antd/es/row/index.js","../node_modules/antd/es/col/index.js","routes/Manage_User_Roles/Add_chemical.js","routes/Manage_User_Roles/chemicalinformation.js","routes/Manage_User_Roles/Edit_chemical.js","routes/Manage_User_Roles/materialadd.js","routes/Manage_User_Roles/Module.js","routes/Manage_User_Roles/materialedit.js","routes/Manage_User_Roles/Materialspecificationcontents.js","routes/Manage_User_Roles/index.js"],"names":["BreadCrumb","props","className","children","Row","Col","Add_chemical","Select","Option","OptGroup","useLocation","FormItem","Form","Item","setchemicalvisible","chemicalvisible","useState","clear","setclear","useForm","form","useEffect","resetFields","title","footer","visible","initialValues","remember","name","onFinish","values","pushchemicalinformation","chemicalcontentindex","layout","rules","required","pattern","RegExp","message","placeholder","type","htmlType","Cinformation","value","Edit_chemical","seteditchemicalvisible","editchemicalvisible","prefill","setprefill","editchemicalinformationvalue","max","setFieldsValue","min","alterchemicalinformation","i","Materialadd","setaddvisible","addisvisible","impact","setimpact","chemicalinformation","setchemicalinformation","setchemicalcontentindex","seteditchemicalinformationvalue","console","log","pop_upedit","resetfields","onCancel","md","label","onChange","map","item","checkmark","length","itemc","ic","toLowerCase","checked","changechemical","filter","itemchange","ichange","alter","onClick","style","display","alignItems","position","top","transform","push","Modules","id","Materialedit","module_permission","setmodule_permission","setvisible","isvisible","handleChange","permissions","product_form","role","comp_name","uns","asmepno","asmegroupno","temperaturemin","temperaturemax","Tensile_Strength_minimum","Tensile_Strength_maximum","Yield_Strength_minimum","Yield_Strength_maximum","status","Elongation_minimum","Elongation_maximum","Reduction_Area_minimum","Reduction_Area_maximum","Hardness","Limits_maximum","Limits_minimum","Temperature","Limits_maximum_hardness","Limits_minimum_hardness","Heat_Treatment_hardness","applychanges","e","original_data","aa","target","indexOf","andress","pre","gre","data","ind","key","module","permission","abc","editinformation","columns","dataIndex","dataSource","Tabs","TabPane","Materialspecificationcontents","match","setpop_upedit","foredit","setforedit","isedit","setisedit","action","data_back","setdata","render","text","row","index","find_key","value1","colSpan","datason","forchange","remoedit","onFinishFailed","width","items","String","created","modified","background","border","color","fontWeight","marginRight","getAttribute","data-index","for_databack","j","change_for_edit","justifyContent","marginBottom","marginTop","pagination","pageSize","updatepack","Manage_User_Roles","to"],"mappings":"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","file":"static/js/5.50b47303.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet BreadCrumb = (props) =>{\r\n\r\n    return (\r\n        <div className=\"bread_crumb\">\r\n{props.children}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BreadCrumb;","import { Row } from '../grid';\nexport default Row;","import { Col } from '../grid';\nexport default Col;","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Add_chemical = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setchemicalvisible,chemicalvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        props.pushchemicalinformation(props.chemicalcontentindex,values)\r\n        setchemicalvisible(false)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(chemicalvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={chemicalvisible}\r\n            // onOk={()=>setchemicalvisible(false)}\r\n            // onCancel={()=>setchemicalvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, pattern: new RegExp(/^[0-9]+$/), message: 'Please give your input!\\'}' }]} name={`min`}>\r\n\r\n            <Input placeholder=\"Min\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true,pattern: new RegExp(/^[0-9]+$/), message: 'Please give your input!\\'}' }]} name={`max`}>\r\n\r\n            <Input placeholder=\"Max\"/>\r\n    </FormItem>\r\n\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Add_chemical;","export const Cinformation = [\r\n    {value : 'CARBON (c)'},\r\n    {value : 'MANGANESE (Mn)'},\r\n    {value : 'SILICON (Si)'},\r\n    {value : 'SULFUR (S)'},\r\n    {value : 'PHOSPHORUS (P)'},\r\n    {value : 'CHROMIUM (Cr)'},\r\n    {value : 'MOLYBDENUM (Mo)'},\r\n    {value : 'NICKEL (Ni)'},\r\n    {value : 'TITANIUM (Ti)'},\r\n    {value : 'COPPER (Cu)'},\r\n    {value : 'BORON (B)'},\r\n    {value : 'HYDROGEN (H)'},\r\n    {value : 'OXYGEN (O)'},\r\n    {value : 'ZINC (Zn)'},\r\n    {value : 'IRON (Fe)'},\r\n    {value : 'Min'},\r\n    {value : 'ALUMINUM (Al)'},\r\n    {value : 'COBOLT (Co)'},\r\n    {value : 'NITROGEN (N)'},\r\n    {value : 'VANADIUM (V)'},\r\n    {value : 'NIOBIUM (Nb)'},\r\n    {value : 'TANTALUM (Ta)'},\r\n    {value : 'Nb + Ta'},\r\n    {value : 'CORBON EQUIVALENT (CE)'},\r\n    {value : 'TIN (Sn)'},\r\n    {value : 'PREN'},\r\n    {value : 'PREW'},\r\n    {value : 'TUNGSTEN (W)'},\r\n    {value : 'LEAD (Pb)'},\r\n    {value : 'MAGNESIUM (Mg)'},\r\n    ]","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select, Input,Radio} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nconst {Option, OptGroup} = Select;\r\nlet Edit_chemical = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { seteditchemicalvisible,editchemicalvisible} = props\r\n    const [ids,setids] = useState([])\r\n    const [prefill,setprefill] = useState(0)\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    useEffect(()=>{\r\n    if(clear == 0){\r\n        form.resetFields()\r\n        setclear(1)\r\n    }\r\n    },[clear])\r\n    useEffect(()=>{\r\n        if(prefill == 0 && props.editchemicalinformationvalue.max ){\r\n            form.setFieldsValue({\r\n            max : props.editchemicalinformationvalue.max,\r\n            min : props.editchemicalinformationvalue.min\r\n        \r\n        \r\n        })\r\n        setprefill(1)\r\n    }\r\n    })\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        props.alterchemicalinformation(props.chemicalcontentindex,values)\r\n        seteditchemicalvisible(false)\r\n        setprefill(0)\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    // alert(editchemicalvisible)\r\n    return(\r\n        <>\r\n        <Modal\r\n            title=\"Add Design Standard\"\r\n            footer={false}\r\n            visible={editchemicalvisible}\r\n            // onOk={()=>seteditchemicalvisible(false)}\r\n            // onCancel={()=>seteditchemicalvisible(false)}\r\n        >\r\n            <div className=\"pop-up-forms product_form\">\r\n            {/* <center><h1>Product Group Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <FormItem  rules={[{ required: true, pattern: new RegExp(/^[0-9]+$/), message: 'Please give your input!\\'}' }]} name={`min`}>\r\n\r\n            <Input placeholder=\"Min\"/>\r\n    </FormItem>\r\n    <FormItem  rules={[{ required: true,pattern: new RegExp(/^[0-9]+$/), message: 'Please give your input!\\'}' }]} name={`max`}>\r\n\r\n            <Input placeholder=\"Max\"/>\r\n    </FormItem>\r\n\r\n    <div className=\"submit_popup\">\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button>\r\n    </div>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Edit_chemical;","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Form,Modal,Select,Upload, Input,Radio,Col, Row} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport Add_chemical from \"./Add_chemical\"\r\nimport {Cinformation} from \"./chemicalinformation\"\r\nimport Edit_chemical from \"./Edit_chemical\"\r\nconst {Option, OptGroup} = Select;\r\nlet Materialadd = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const { setaddvisible,addisvisible} = props\r\n    const [chemicalvisible,setchemicalvisible] = useState(false)\r\n    const [impact,setimpact] = useState(false)\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    const [prefill,setprefill] = useState(0)\r\n    const [imgsrc,setimgsrc] = useState('')\r\n    const [chemicalinformation,setchemicalinformation]=useState([])\r\n    const [chemicalcontentindex,setchemicalcontentindex]=useState('no')\r\n    const [editchemicalvisible,seteditchemicalvisible] = useState(false)\r\n    const [editchemicalinformationvalue,seteditchemicalinformationvalue] = useState('no')\r\n    console.log('for edit employee',props.pop_upedit)\r\n    // useEffect(()=>{\r\n    // if(clear == 0){\r\n    //     form.resetFields()\r\n    //     setclear(1)\r\n    // }\r\n    // },[clear])\r\n    useEffect(()=>{\r\n        // alert(props.pop_upedit)\r\n        if(prefill == 0 && props.pop_upedit ){\r\n            // setchemicalinformation(props.pop_upedit.chemicalinformation)\r\n            // form.setFieldsValue({\r\n            //     product_form: props.pop_upedit.product_form,\r\n            //     material_specification: props.pop_upedit.material_specification,\r\n            //     comp_name: props.pop_upedit.comp_name,\r\n            //     uns: props.pop_upedit.uns,\r\n            //     asmepno: props.pop_upedit.asmepno,\r\n            //     asmegroupno: props.pop_upedit.asmegroupno,\r\n            //     temperaturemin: props.pop_upedit.temperaturemin,\r\n            //     temperaturemax: props.pop_upedit.temperaturemax,\r\n            //     chemicalinformation: props.pop_upedit.chemicalinformation,\r\n            //     Tensile_Strength_minimum: props.pop_upedit.Tensile_Strength_minimum,\r\n            //     Tensile_Strength_maximum: props.pop_upedit.Tensile_Strength_maximum,\r\n            //     Yield_Strength_minimum: props.pop_upedit.Yield_Strength_minimum,\r\n            //     Yield_Strength_maximum: props.pop_upedit.Yield_Strength_maximum,\r\n            //     status: props.pop_upedit.status,\r\n            //     Elongation_minimum: props.pop_upedit.Elongation_minimum,\r\n            //     Elongation_maximum: props.pop_upedit.Elongation_maximum,\r\n            //     Reduction_Area_minimum: props.pop_upedit.Reduction_Area_minimum,\r\n            //     Reduction_Area_maximum: props.pop_upedit.Reduction_Area_maximum,\r\n            //     Hardness: props.pop_upedit.Hardness,\r\n            //     Limits_maximum: props.pop_upedit.Limits_maximum,\r\n            //     Limits_minimum: props.pop_upedit.Limits_minimum,\r\n            //     Temperature: props.pop_upedit.Temperature,\r\n            //     Limits_maximum_hardness: props.pop_upedit.Limits_maximum_hardness,\r\n            //     Limits_minimum_hardness: props.pop_upedit.Limits_minimum_hardness,\r\n            //     Heat_Treatment_hardness: props.pop_upedit.Heat_Treatment_hardness,\r\n            // })\r\n            setprefill(1)\r\n        }\r\n\r\n    },[props.pop_upedit])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        // let abc = values\r\n        // abc.chemicalinformation = chemicalinformation\r\n        // props.editinformation(abc,props.pop_upedit.key)\r\n        setaddvisible(false)\r\n        // setprefill(0)\r\n        // prefill\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    const resetfields = async () =>{\r\n        form.resetFields()\r\n        // alert(1)\r\n    }\r\n    // alert(addisvisible)\r\n    function alterchemicalinformation(i,value){\r\n        let alter = chemicalinformation.map((item,i)=>{\r\n            if(item.value.toLowerCase() == Cinformation[i].value.toLowerCase()){\r\n\r\n                return{\r\n                    value : item.value,\r\n                    min : `${value.min}`,\r\n                    max : `${value.max}`\r\n\r\n                }\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n\r\n        setchemicalinformation(alter)\r\n    }\r\n    function pushchemicalinformation(i,values){\r\n        let alter = chemicalinformation\r\n        alter.push({\r\n            value: Cinformation[i].value,\r\n            min:values.min,\r\n            max:values.max\r\n        })\r\n        setchemicalinformation(alter)\r\n    }\r\n    return(\r\n        <>\r\n        <div >\r\n        <Modal\r\n            title=\"Employee Add\"\r\n            className=\"for_long_edit\"\r\n            footer={false}\r\n            visible={addisvisible}\r\n            // onOk={()=>setaddvisible(false)}\r\n            onCancel={ async() =>{\r\n\r\n                 await resetfields();\r\n            //    aa = 88\r\n                setaddvisible(false)\r\n              }\r\n            }\r\n        >\r\n            <div className=\"pop-up-forms product_form material_form\">\r\n            {/* <center><h1>Employee Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nclassName={'big_forms'}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <h3>General Information</h3>\r\n    <Row>\r\n        <Col md={8} >\r\n    <FormItem label='Material Specification'  rules={[{ required: true, message: 'Please input your Material Specification!\\'}' }]} name={`material_specification`}>\r\n\r\n            <Input placeholder=\"Material Specification\"/>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n    <FormItem label='Name. Comp'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`comp_name`}>\r\n\r\n<Input placeholder=\"Name. Comp\"/>\r\n</FormItem>\r\n\r\n    </Col>\r\n    <Col md={8}>\r\n\r\n    {/* <div className=\"submit_popup\"> */}\r\n    <FormItem label={'Product Form'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`product_form`}>\r\n            <Select\r\n                placeholder=\"Product Form\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"Product1\">Product1</Option>\r\n                <Option value=\"Product2\">Product2</Option>\r\n            </Select>\r\n    </FormItem>\r\n    \r\n        \r\n        \r\n        {/* <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button> */}\r\n\r\n    {/* </div> */}\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n               <FormItem label='UNS'  rules={[{ required: true, message: 'Please input your UNS!\\'}' }]} name={`uns`}>\r\n\r\n<Input placeholder=\"UNS\"/>\r\n</FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='ASME IX P No'  rules={[{ required: true, message: 'Please input your ASME IX P No!\\'}' }]} name={`asmepno`}>\r\n\r\n<Input placeholder=\"ASME IX\"/>\r\n</FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='ASME IX Group No'  rules={[{ required: true, message: 'Please input your Group No!\\'}' }]} name={`asmegroupno`}>\r\n\r\n<Input placeholder=\"ASME IX\"/>\r\n</FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n        <FormItem label='Temperature Limit(°C) Minimum'  rules={[{ required: true, message: 'Please input your temperature!\\'}' }]} name={`temperaturemin`}>\r\n            <Input placeholder=\"Temperature Limit(°C) Minimum\"/>\r\n        </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='Temperature Limit(°C) Maximum'  rules={[{ required: true, message: 'Please input your temperature!\\'}' }]} name={`temperaturemax`}>\r\n            <Input placeholder=\"Temperature Limit(°C) Maximum\"/>\r\n        </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <h3>Chemical Information</h3>\r\n    <div className=\"checkbox_container\" >\r\n        {\r\n            \r\n            Cinformation.map((item,i)=>{\r\n                let checkmark = 'no'\r\n                if(chemicalinformation.length>0){\r\n                    chemicalinformation.map((itemc,ic)=>{\r\n                        // console.log(itemc.value,'checklog')\r\n                        // console.log(item.value,'checklog')\r\n                        if(item.value.toLowerCase() == itemc.value.toLowerCase() ){\r\n                            checkmark = ic\r\n                            return\r\n                        }\r\n                         \r\n                    })\r\n                }\r\n                checkmark != 'no' ? console.log(chemicalinformation[checkmark].value,'yes log') : console.log('no log')\r\n                return(\r\n                    <div className=\"for-checkbox\">\r\n                    <input checked={checkmark != 'no' ? true:false} onChange={()=>{\r\n                        let changechemical = 'no'\r\n                         chemicalinformation.filter((itemchange,ichange)=>{\r\n                            if(itemchange.value.toLowerCase() == item.value.toLowerCase()){\r\n                                changechemical = ichange\r\n                            }\r\n                            return\r\n                        })\r\n                        \r\n                         if(changechemical != 'no'){\r\n                            let alter = chemicalinformation.filter((itemchange,ichange)=>{\r\n                                if(itemchange.value.toLowerCase() == item.value.toLowerCase()){\r\n                                    changechemical = ichange\r\n                                }\r\n                                return ichange != changechemical\r\n                            })\r\n                            setchemicalinformation(alter)\r\n                         }else{\r\n                            setchemicalcontentindex(i)\r\n                            setchemicalvisible(true)\r\n                         }\r\n                    }}  type='checkbox'  />\r\n                    <div className=\"checkbox_content_container\">\r\n                        <div className=\"label_check\">{item.value}</div>\r\n                        {checkmark != 'no' ?   <div className=\"checkbox_value_container\" >\r\n                            <div className=\"label_check_values\">\r\n                                <span>Min : {chemicalinformation[checkmark].min}</span>\r\n                                <span>Max : {chemicalinformation[checkmark].max}</span>\r\n                            </div>\r\n                            <i  className=\"for_check_edit icon icon-edit\" onClick={()=>{\r\n                                setchemicalcontentindex(i)\r\n                                seteditchemicalvisible(true)\r\n                                seteditchemicalinformationvalue(chemicalinformation[checkmark])\r\n                            }} />\r\n                        </div>: ``}\r\n                    </div>\r\n                </div>            \r\n                )\r\n            })\r\n        }\r\n        \r\n\r\n    </div>\r\n    <h3>Mechanical Information</h3>\r\n    <h4>Tensile Test</h4>\r\n    <Row>\r\n        <Col md={8} >\r\n    <FormItem label='Tensile Strength (UTS)(Mpa) Minimum'  rules={[{ required: true, message: 'Please input your Material Specification!\\'}' }]} name={`Tensile_Strength_minimum`}>\r\n\r\n            <Input placeholder=\"Tensile Strength (UTS)(Mpa) Minimum\"/>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n    <FormItem label='Tensile Strength (UTS)(Mpa) Maximum'  rules={[{ required: true, message: 'Please input your title!\\'}' }]} name={`Tensile_Strength_maximum`}>\r\n\r\n<Input placeholder=\"Tensile Strength (UTS)(Mpa) Maximum\"/>\r\n</FormItem>\r\n\r\n    </Col>\r\n    <Col md={8}>\r\n\r\n    <FormItem label='Yield Strength (YS)(Mpa) Minimum'  rules={[{ required: true, message: 'Please input your Yield Strength !\\'}' }]} name={`Yield_Strength_minimum`}>\r\n\r\n        <Input placeholder=\"Yield Strength (YS)(Mpa) Minimum\"/>\r\n    </FormItem>\r\n\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n               <FormItem label='Yield Strength (YS)(Mpa) Maximum'  rules={[{ required: true, message: 'Please input your Yield Strength!\\'}' }]} name={`Yield_Strength_maximum`}>\r\n                    <Input placeholder=\"Yield Strength (YS)(Mpa) Maximum\"/>\r\n                </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='Elongation (E)(%) Minimum'  rules={[{ required: true, message: 'Please input your Elongation!\\'}' }]} name={`Elongation_minimum`}>\r\n\r\n<Input placeholder=\"Elongation (E)(%) Minimum\"/>\r\n</FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='Elongation (E)(%) Maximum'  rules={[{ required: true, message: 'Please input your Elongation Maximum!\\'}' }]} name={`Elongation_maximum`}>\r\n\r\n<Input placeholder=\"Elongation (E)(%) Maximum\"/>\r\n</FormItem>\r\n        </Col>\r\n    </Row>\r\n    <Row>\r\n        <Col md={8}>\r\n        <FormItem label='Reduction Area (RA)(%) Minimum'  rules={[{ required: true, message: 'Please input your Reduction Area !\\'}' }]} name={`Reduction_Area_minimum`}>\r\n            <Input placeholder=\"Reduction Area (RA)(%) Minimum\"/>\r\n        </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n        <FormItem label='Reduction Area (RA)(%) Maximum'  rules={[{ required: true, message: 'Please input your Reduction Area !\\'}' }]} name={`Reduction_Area_maximum`}>\r\n            <Input placeholder=\"Reduction Area (RA)(%) Maximum\"/>\r\n        </FormItem>\r\n        </Col>\r\n    </Row>\r\n    <h4>Hardness Test</h4>\r\n    <Row>\r\n        <Col md={8} >\r\n    <FormItem label='Hardness M.U.'  rules={[{ required: true, message: 'Please input your Material Hardness!\\'}' }]} name={`Hardness`}>\r\n            <Input placeholder=\"Hardness M.U.\"/>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n        <FormItem label='Limits Maximum'  rules={[{ required: true, message: 'This field is required!\\'}' }]} name={`Limits_maximum`}>\r\n            <Input placeholder=\"Limits Maximum\"/>\r\n        </FormItem>\r\n    </Col>\r\n    <Col md={8}>\r\n            <FormItem label='Limits Minimum'  rules={[{ required: true, message: 'Please input your limit !\\'}' }]} name={`Limits_minimum`}>\r\n                <Input placeholder=\"Limits Minimum\"/>\r\n            </FormItem>\r\n    </Col>\r\n    </Row>\r\n    <div className=\"Hardness_Test\">\r\n            <input type={`checkbox`} checked={impact} onChange={()=>{\r\n                setimpact(!impact)\r\n            }} />\r\n        <h4>Impact Test</h4>\r\n        </div>\r\n        {impact ? \r\n        <Row>\r\n                <Col md={8} >\r\n                    <FormItem label='Temperature'  rules={[{ required: true, message: 'Please input your Material Temperature!\\'}' }]} name={`Temperature`}>\r\n                            <Input placeholder=\"Temperature\"/>\r\n                    </FormItem>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormItem label='Limits Maximum'  rules={[{ required: true, message: 'This field is required!\\'}' }]} name={`Limits_maximum_hardness`}>\r\n                        <Input placeholder=\"Limits Maximum\"/>\r\n                    </FormItem>\r\n                </Col>\r\n                <Col md={8}>\r\n                    <FormItem label='Limits Minimum'  rules={[{ required: true, message: 'Please input your limit !\\'}' }]} name={`Limits_minimum_hardness`}>\r\n                        <Input placeholder=\"Limits Minimum\"/>\r\n                    </FormItem>\r\n                </Col>\r\n        </Row> : ``}        \r\n    <h4>Heat Treatment Information</h4>\r\n    <Row>\r\n        <Col md={8}>\r\n        <FormItem label='Heat Treatment'  rules={[{ required: true, message: 'Please input your Heat Treatment !\\'}' }]} name={`Heat_Treatment_hardness`}>\r\n                <Input placeholder=\"Heat Treatment\"/>\r\n            </FormItem>\r\n        </Col>\r\n        <Col md={8}>\r\n            <div style={{display:`flex`,alignItems:`center`,position:`relative`,top:`50%`,transform:`translateY(-30%)`}}>\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Update\r\n        </Button>\r\n        </div>\r\n        </Col>\r\n    </Row>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n</div>\r\n<Add_chemical pushchemicalinformation={pushchemicalinformation} chemicalcontentindex={chemicalcontentindex} setchemicalvisible={setchemicalvisible} chemicalvisible={chemicalvisible} />\r\n<Edit_chemical editchemicalinformationvalue={editchemicalinformationvalue} alterchemicalinformation={alterchemicalinformation} chemicalcontentindex={chemicalcontentindex} seteditchemicalvisible={seteditchemicalvisible} editchemicalvisible={editchemicalvisible} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Materialadd;","export let Modules = [{\r\n    name :`Strategic Planning`,\r\n    id: '1'\r\n},\r\n{\r\n    name :`Customer Management`,\r\n    id: '2'\r\n},\r\n{\r\n    name :`Supplier Management`,\r\n    id: '3'\r\n},\r\n{\r\n    name :`Audit Management`,\r\n    id: '4'\r\n},\r\n{\r\n    name :`Non Conformance  (NCR)`,\r\n    id: '5'\r\n},\r\n{\r\n    name :`Risk Assessment`,\r\n    id: '6'\r\n},\r\n{\r\n    name :`Calibration  Management`,\r\n    id: '7'\r\n},\r\n{\r\n    name :`Document  Management`,\r\n    id: '8'\r\n},\r\n{\r\n    name :`Meeting  Management`,\r\n    id: '9'\r\n},\r\n{\r\n    name :`Task  Management`,\r\n    id: '10'\r\n},\r\n{\r\n    name :`Issues`,\r\n    id: '11'\r\n},\r\n{\r\n    name :`Non Destructive  Exam`,\r\n    id: '12'\r\n}]","import React,{ useEffect, useState} from \"react\";\r\nimport {Button, Drawer,Checkbox,Table,Form,Modal,Select,Upload, Input,Radio,Col, Row} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport Add_chemical from \"./Add_chemical\"\r\nimport {Cinformation} from \"./chemicalinformation\"\r\nimport Edit_chemical from \"./Edit_chemical\"\r\nimport {Modules} from \"./Module\"\r\nconst {Option, OptGroup} = Select;\r\nlet Materialedit = (props) =>{\r\n    let location = useLocation()\r\n    const FormItem = Form.Item;\r\n    const [module_permission,setmodule_permission] = useState([])\r\n    const { setvisible,isvisible} = props\r\n    const [chemicalvisible,setchemicalvisible] = useState(false)\r\n    const [impact,setimpact] = useState(false)\r\n    const [ids,setids] = useState([])\r\n    const [clear,setclear] = useState(0)\r\n    const [form] = Form.useForm();\r\n    const [prefill,setprefill] = useState(0)\r\n    const [imgsrc,setimgsrc] = useState('')\r\n    const [chemicalinformation,setchemicalinformation]=useState([])\r\n    const [chemicalcontentindex,setchemicalcontentindex]=useState('no')\r\n    const [editchemicalvisible,seteditchemicalvisible] = useState(false)\r\n    const [editchemicalinformationvalue,seteditchemicalinformationvalue] = useState('no')\r\n    console.log('for edit employee',Modules)\r\n    // useEffect(()=>{\r\n    // if(clear == 0){\r\n    //     form.resetFields()\r\n    //     setclear(1)\r\n    // }\r\n    // },[clear])\r\n    useEffect(()=>{\r\n        // alert(props.pop_upedit)\r\n        if(prefill == 0 && props.pop_upedit ){\r\n            setchemicalinformation(props.pop_upedit.chemicalinformation)\r\n            setmodule_permission(props.pop_upedit.permissions)\r\n            form.setFieldsValue({\r\n                product_form: props.pop_upedit.product_form,\r\n                role: props.pop_upedit.role,\r\n                comp_name: props.pop_upedit.comp_name,\r\n                uns: props.pop_upedit.uns,\r\n                asmepno: props.pop_upedit.asmepno,\r\n                asmegroupno: props.pop_upedit.asmegroupno,\r\n                temperaturemin: props.pop_upedit.temperaturemin,\r\n                temperaturemax: props.pop_upedit.temperaturemax,\r\n                chemicalinformation: props.pop_upedit.chemicalinformation,\r\n                Tensile_Strength_minimum: props.pop_upedit.Tensile_Strength_minimum,\r\n                Tensile_Strength_maximum: props.pop_upedit.Tensile_Strength_maximum,\r\n                Yield_Strength_minimum: props.pop_upedit.Yield_Strength_minimum,\r\n                Yield_Strength_maximum: props.pop_upedit.Yield_Strength_maximum,\r\n                status: props.pop_upedit.status,\r\n                Elongation_minimum: props.pop_upedit.Elongation_minimum,\r\n                Elongation_maximum: props.pop_upedit.Elongation_maximum,\r\n                Reduction_Area_minimum: props.pop_upedit.Reduction_Area_minimum,\r\n                Reduction_Area_maximum: props.pop_upedit.Reduction_Area_maximum,\r\n                Hardness: props.pop_upedit.Hardness,\r\n                Limits_maximum: props.pop_upedit.Limits_maximum,\r\n                Limits_minimum: props.pop_upedit.Limits_minimum,\r\n                Temperature: props.pop_upedit.Temperature,\r\n                Limits_maximum_hardness: props.pop_upedit.Limits_maximum_hardness,\r\n                Limits_minimum_hardness: props.pop_upedit.Limits_minimum_hardness,\r\n                Heat_Treatment_hardness: props.pop_upedit.Heat_Treatment_hardness,\r\n                status : props.pop_upedit.status\r\n            })\r\n            setprefill(1)\r\n        }\r\n\r\n    },[props.pop_upedit])\r\n    function forarrow(e){\r\n        // e.persist()\r\n        const {id} = e.currentTarget\r\n        if (ids.indexOf(id) == -1)\r\n        {\r\n            setids(old => [...old,id]) \r\n        }\r\n        if(ids.indexOf(id) != -1){\r\n            let ab = ids.filter((item)=>{\r\n                return item != id\r\n            })\r\n            setids(ab)\r\n        } \r\n    }\r\n    function onFinish(values){\r\n        let abc = values\r\n        abc.permissions = module_permission\r\n        abc.chemicalinformation = chemicalinformation\r\n        props.editinformation(abc,props.pop_upedit.key)\r\n        setvisible(false)\r\n        setprefill(0)\r\n        // prefill\r\n        form.resetFields()\r\n    }\r\n    function onFinishFailed(){\r\n\r\n    }\r\n    function handleChange(value){\r\n        console.log(value,'i am here')\r\n    }\r\n    const resetfields = async () =>{\r\n        form.resetFields()\r\n        // alert(1)\r\n    }\r\n    // alert(isvisible)\r\n    function alterchemicalinformation(i,value){\r\n        let alter = chemicalinformation.map((item,i)=>{\r\n            if(item.value.toLowerCase() == Cinformation[i].value.toLowerCase()){\r\n\r\n                return{\r\n                    value : item.value,\r\n                    min : `${value.min}`,\r\n                    max : `${value.max}`\r\n\r\n                }\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n\r\n        setchemicalinformation(alter)\r\n    }\r\n    function pushchemicalinformation(i,values){\r\n        let alter = chemicalinformation\r\n        alter.push({\r\n            value: Cinformation[i].value,\r\n            min:values.min,\r\n            max:values.max\r\n        })\r\n        setchemicalinformation(alter)\r\n    }\r\n    const columns= [\r\n        {\r\n            title: 'Module',\r\n            dataIndex: 'module',\r\n            key: 'module',\r\n        },\r\n        {\r\n            title:'Permission',\r\n            dataIndex:'permission',\r\n            key:'permission',\r\n            // align:'center'\r\n        }\r\n    ]\r\n   function applychanges(e){\r\n        let original_data = module_permission\r\n        let aa = 0\r\n        // console.log(e,'123456')\r\n        \r\n        original_data = original_data.map((item,i)=>{\r\n            if(e.target.id == item.id){\r\n                aa = 1\r\n                if(e.target.checked == false){\r\n                    if(item.permissions.indexOf(e.target.andress) != -1){\r\n                        let pre = item.permissions;\r\n                        pre = pre.filter((item,i)=>{ return item != e.target.andress})\r\n                        return{\r\n                            id : item.id,\r\n                            permissions : pre\r\n                        }\r\n                    }else{\r\n                        return item\r\n                    }\r\n                }else if(e.target.checked == true){\r\n                    if(item.permissions.indexOf(e.target.andress) == -1){\r\n                        let gre = item.permissions\r\n                        gre.push(e.target.andress)\r\n                        return {\r\n                            id : item.id,\r\n                            permissions : gre\r\n                        }\r\n                    }else{\r\n                        return item\r\n                    }\r\n                }\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n        // original_data = original_data.filter((item)=>{return item.permissions.length > 0})\r\n        if(aa == 0){\r\n            original_data.push({\r\n                id : e.target.id,\r\n                permissions : [e.target.andress]\r\n            })\r\n            setmodule_permission(original_data)\r\n        }else if(aa == 1){\r\n            setmodule_permission(original_data)\r\n            console.log(original_data,'123456')\r\n        }\r\n        \r\n    }\r\n    let data = []\r\n    Modules.map((item,ind)=>{\r\n        \r\n        if(module_permission.length>0){\r\n            let aa = []\r\n            for(let i=0;i<module_permission.length;i++){\r\n                if(module_permission[i].id == item.id){\r\n                    aa = module_permission[i].permissions ;\r\n                    \r\n                    break;\r\n                }\r\n            }\r\n            \r\n            if(aa.length == 0){\r\n                data.push({\r\n                    key : ind,\r\n                    module : item.name,\r\n                    permission : <span className=\"permission_check\"><Checkbox checked={false} onChange={(e)=>{applychanges(e)}} andress=\"view\" id={item.id}>View</Checkbox><Checkbox checked={false} onChange={(e)=>{applychanges(e)}} andress=\"edit\" id={item.id}>Edit</Checkbox><Checkbox checked={false} onChange={(e)=>{applychanges(e)}} andress=\"delete\" id={item.id}>Delete</Checkbox></span>\r\n                })\r\n                \r\n            }else{\r\n                console.log(module_permission,'12345678')\r\n                console.log(aa,'123456789')        \r\n                data.push({\r\n                    key : ind, \r\n                    module : item.name,\r\n                    permission : <span className=\"permission_check\"><Checkbox onChange={(e)=>{applychanges(e)}} andress=\"view\" checked={aa.indexOf('view') != -1 ? true : false} id={item.id}>View</Checkbox><Checkbox andress=\"edit\" onChange={(e)=>{applychanges(e)}}  checked={aa.indexOf('edit') != -1 ? true : false} id={item.id}>Edit</Checkbox><Checkbox andress=\"delete\"  checked={aa.indexOf('delete') != -1 ? true : false} onChange={(e)=>{applychanges(e)}} id={item.id}>Delete</Checkbox></span>\r\n                })\r\n                \r\n            }\r\n        }else{\r\n            \r\n            data.push({\r\n                key : ind,\r\n                module : item.name,\r\n                permission : <span className=\"permission_check\"><Checkbox onChange={applychanges} andress=\"view\" id={item.id}>View</Checkbox><Checkbox onChange={(e)=>{applychanges(e)}} id={item.id}   andress=\"edit\">Edit</Checkbox><Checkbox andress=\"delete\" onChange={(e)=>{applychanges(e)}} id={item.id}>Delete</Checkbox></span>\r\n            })\r\n        }\r\n    })\r\n    // console.log(module_permission,'all boxes are here')\r\n    return(\r\n        <>\r\n        <div >\r\n        <Modal\r\n            title=\"Edit Roles and Permissions\"\r\n            className=\"for_long_edit\"\r\n            footer={false}\r\n            visible={isvisible}\r\n            // onOk={()=>setvisible(false)}\r\n            onCancel={ async() =>{\r\n\r\n                 await resetfields();\r\n            //    aa = 88\r\n                setvisible(false)\r\n              }\r\n            }\r\n        >\r\n            <div className=\"pop-up-forms product_form material_form\">\r\n            {/* <center><h1>Employee Form</h1></center> */}\r\n            \r\n<Form\r\ninitialValues={{ remember: true }}\r\nname=\"basic\"\r\nform={form}\r\nclassName={'big_forms'}\r\nonFinish={onFinish}\r\nlayout=\"inline\">\r\n    <Row>\r\n        <Col md={12} >\r\n        <FormItem label={'Role'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`role`}>\r\n            <Select\r\n                placeholder=\"Role\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"xxx\">xxx</Option>\r\n                <Option value=\"role1\">role1</Option>\r\n            </Select>\r\n    </FormItem>\r\n    </Col>\r\n    <Col md={12}>\r\n    <FormItem label={'Status'}  rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status`}>\r\n            <Select\r\n                placeholder=\"Status\"\r\n                // style={{width: 200}}\r\n                onChange={handleChange}\r\n            >\r\n                <Option value=\"active\">active</Option>\r\n                <Option value=\"inactive\">inactive</Option>\r\n            </Select>\r\n    </FormItem>\r\n\r\n    </Col>\r\n    <Col md={8}>\r\n\r\n    {/* <div className=\"submit_popup\"> */}        \r\n        {/* <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Add\r\n        </Button> */}\r\n\r\n    {/* </div> */}\r\n    </Col>\r\n    </Row>\r\n    <Row>\r\n    <Col className=\"for_gapfix\" md={24}>\r\n    <Table  className=\"gx-table-responsive\"      columns={columns} dataSource={data}/> \r\n    </Col>\r\n    </Row>    \r\n    <Row>\r\n        <Col md={8}>\r\n            <div style={{display:`flex`,alignItems:`center`,position:`relative`,top:`50%`,transform:`translateY(-30%)`}}>\r\n        <Button className=\"gx-mb-0 \"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n                  Update\r\n        </Button>\r\n        </div>\r\n        </Col>\r\n    </Row>\r\n</Form>\r\n    </div>\r\n</Modal>\r\n</div>\r\n<Add_chemical pushchemicalinformation={pushchemicalinformation} chemicalcontentindex={chemicalcontentindex} setchemicalvisible={setchemicalvisible} chemicalvisible={chemicalvisible} />\r\n<Edit_chemical editchemicalinformationvalue={editchemicalinformationvalue} alterchemicalinformation={alterchemicalinformation} chemicalcontentindex={chemicalcontentindex} seteditchemicalvisible={seteditchemicalvisible} editchemicalvisible={editchemicalvisible} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Materialedit;","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Materialadd from \"./materialadd\"\r\n// import Setproductadd from \"./Setproductadd\"\r\nimport Materialedit from \"./materialedit\"\r\n// import Add_role from \"./Add_role\"\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Materialspecificationcontents = ({match}) => {\r\n  const [form] = Form.useForm();\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const [pop_upedit,setpop_upedit] = useState()\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  const [addisvisible,setaddvisible] = useState(false)\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      product_form: 'Product1',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n        // {\r\n        //   id : '1',\r\n        //   permissions : ['view','edit','delete']\r\n        // },\r\n        // {\r\n        //   id : '2',\r\n        //   permissions : ['view','edit']\r\n        // },      \r\n\r\n    ],\r\n      Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n      status: 'inactive',\r\n      Elongation_minimum:'10',\r\n      Elongation_maximum:'10',\r\n\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n\r\n\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      product_form: 'Product1',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n      {\r\n        id : '1',\r\n        permissions : ['view','edit','delete']\r\n      },\r\n      {\r\n        id : '2',\r\n        permissions : ['view','edit']\r\n      },      \r\n\r\n  ],  \r\n    Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n    //   name: 'Test2',\r\n      status: 'active',\r\nElongation_minimum:'10',\r\n      Elongation_maximum:'10',\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      product_form: 'Product1',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n      {\r\n        id : '1',\r\n        permissions : ['view','edit','delete']\r\n      },\r\n      {\r\n        id : '2',\r\n        permissions : ['view','edit']\r\n      },      \r\n\r\n  ],\r\n    Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n      status: 'active',\r\nElongation_minimum:'10',\r\n    //   name: 'Test3',\r\n      Elongation_maximum:'10',\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      product_form: 'Product1',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n      {\r\n        id : '1',\r\n        permissions : ['view','edit','delete']\r\n      },\r\n      {\r\n        id : '2',\r\n        permissions : ['view','edit']\r\n      },      \r\n\r\n  ],\r\n    Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n      status: 'active',\r\nElongation_minimum:'10',\r\n    //   name: 'Test4',\r\n      Elongation_maximum:'10',\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      product_form: 'Product1',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n      {\r\n        id : '1',\r\n        permissions : ['view','edit','delete']\r\n      },\r\n      {\r\n        id : '2',\r\n        permissions : ['view','edit']\r\n      },      \r\n\r\n  ],\r\n    Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n    //   name: 'Test5',\r\n      status: 'active',\r\nElongation_minimum:'10',\r\n      Elongation_maximum:'10',\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      product_form: 'Product1',\r\n      role: 'xxx',\r\n      comp_name:'arul subramaniyam',\r\n      uns:'xxx',\r\n      asmepno:'12',\r\n      asmegroupno:'12',\r\n      temperaturemin:'12',\r\n      temperaturemax:'12',\r\n      chemicalinformation:[\r\n    {value : 'CARBON (c)',min:'30',max:30},\r\n    {value : 'MANGANESE (Mn)',min:'30',max:30},\r\n    {value : 'SILICON (Si)',min:'30',max:30},\r\n    {value : 'SULFUR (S)',min:'30',max:30},\r\n    {value : 'PHOSPHORUS (P)',min:'30',max:30},],\r\n    permissions : [\r\n      {\r\n        id : '1',\r\n        permissions : ['view','edit','delete']\r\n      },\r\n      {\r\n        id : '2',\r\n        permissions : ['view','edit']\r\n      },      \r\n\r\n  ],\r\n    Tensile_Strength_minimum:'10',\r\n      Tensile_Strength_maximum:'10',\r\n      Yield_Strength_minimum:'10',\r\n      Yield_Strength_maximum:'10',\r\n    //   name: 'Test6',\r\n      status: 'active',\r\nElongation_minimum:'10',\r\n      Elongation_maximum:'10',\r\n      Reduction_Area_minimum:'10',\r\n      Reduction_Area_maximum:'10',\r\n      Hardness:'hb',\r\n      Limits_maximum:'10',\r\n      Limits_minimum:'10',\r\n      Temperature:'10',\r\n      Limits_maximum_hardness:'10',\r\n      Limits_minimum_hardness:'11',\r\n      Heat_Treatment_hardness:'12',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  // const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`name${index}`] = value1[0].name\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        values[`status${index}`] = value1[0].status\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              // forchange.permissions = values[`permissions${index}`]\r\n              forchange.name = values[`name${index}`]\r\n              forchange.status = values[`status${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Name`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`name${index}`}>\r\n\r\n<Input placeholder=\"Name\"/>\r\n</FormItem>\r\n<FormItem label={`Status`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`status${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"active\">Active</Option>\r\n          <Option value=\"inactive\">Inactive</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    \r\n\r\n    {\r\n      title: 'Created',\r\n      dataIndex: 'created',\r\n      key: 'created',\r\n      \r\n    \r\n    },\r\n    {\r\n        title: 'Modified',\r\n        dataIndex: 'modified',\r\n        key: 'modified',\r\n        \r\n      \r\n      },\r\n      {\r\n        title: 'Status',\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        \r\n      \r\n      },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          name : '',\r\n          created : '',\r\n          modified : '',\r\n          status : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          role : item.role,\r\n          created : '06-09-2022',\r\n          modified : '07-09-2022',\r\n          status : item.status == 'active'? <button style={{background: '#4ad411b8',\r\n            border: '1px solid #4ad411b8',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>active</button> : <button style={{background: '#ff000096',\r\n            border: '1px solid #ff000096',width:'70px',\r\n            color: 'white',fontWeight:'200'}}>Inactive</button>,\r\n          permissions : item.permissions,\r\n          action : <><div><i  className=\"icon icon-edit\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setpop_upedit(item)\r\n            setvisible(true)\r\n            // setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} /><i  className=\"icon icon-trash\" style={{marginRight : '10px',color:'blue',fontWeight:'bold !importent'}} id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}/></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  function editinformation(values,key){\r\n      let updatepack = data_back.map((item)=>{\r\n        if(item.key == key){\r\n          return     {\r\n            key: item.key,\r\n            role: values.role,\r\n            // comp_name: values.comp_name,\r\n            // uns: values.uns,\r\n            // asmepno: values.asmepno,\r\n            // asmegroupno: values.asmegroupno,\r\n            // temperaturemin: values.temperaturemin,\r\n            // temperaturemax: values.temperaturemax,\r\n            // chemicalinformation: values.chemicalinformation,\r\n            // Tensile_Strength_minimum: values.Tensile_Strength_minimum,\r\n            // Tensile_Strength_maximum: values.Tensile_Strength_maximum,\r\n            // Yield_Strength_minimum: values.Yield_Strength_minimum,\r\n            // Yield_Strength_maximum: values.Yield_Strength_maximum,\r\n            // //   name: 'Test6',\r\n            // status: 'active',\r\n            // Elongation_minimum: values.Elongation_minimum,\r\n            // Elongation_maximum: values.Elongation_maximum,\r\n            // Reduction_Area_minimum: values.Reduction_Area_minimum,\r\n            // Reduction_Area_maximum: values.Reduction_Area_maximum,\r\n            // Hardness: values.Hardness,\r\n            // Limits_maximum: values.Limits_maximum,\r\n            // Limits_minimum: values.Limits_minimum,\r\n            // Temperature: values.Temperature,\r\n            // Limits_maximum_hardness: values.Limits_maximum_hardness,\r\n            // Limits_minimum_hardness: values.Limits_minimum_hardness,\r\n            // Heat_Treatment_hardness: values.Heat_Treatment_hardness,\r\n            status : values.status,\r\n            permissions : values.permissions,\r\n            action : <div>\r\n              <button>\r\n                  Edit\r\n              </button>\r\n              <button>\r\n                  Delete\r\n              </button>\r\n            </div>,\r\n          }\r\n        }else{\r\n          return item\r\n        }\r\n      })\r\n      setdata(updatepack);\r\n  }\r\n  return (\r\n    <div>\r\n\r\n<div style={{display : `flex`,justifyContent:`flex-end`,marginBottom:'15px',marginTop:'15px', marginRight:`20px`}}>\r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={()=>setaddvisible(true)}\r\n            >\r\n              Add\r\n            </Button>\r\n            </div>\r\n      <Card className=\"gx-card\">\r\n      \r\n<Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n</Card>\r\n<Materialadd setaddvisible={setaddvisible} addisvisible={addisvisible} />\r\n<Materialedit editinformation={editinformation} pop_upedit={pop_upedit} setvisible={setvisible} isvisible={isvisible} />\r\n{/* <Add_role setaddvisible={setaddvisible} addisvisible={addisvisible} /> */}\r\n{/* <Setproductadd setvisible={setvisible} isvisible={isvisible} /> */}\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Materialspecificationcontents;\r\n","import React,{ useState} from \"react\";  \r\n// import {Card, Divider, Table ,  Tabs} from \"antd\";\r\nimport {Card, Divider, Table,Form,Input, Select,Button,Tabs} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setdrawer from \"../../containers/Sidebar/setdrawer\"\r\n// import DesignStandard from \"./DesignStandard\";\r\n// import Size from \"./Size\"\r\n// import Bore from \"./Bore\"\r\n// import  Class  from \"./Class\";\r\n// import  Working_Pressure  from \"./Working_Pressure\";\r\n// import  End_Connection  from \"./End_Connection\";\r\n// import  Operator_Type  from \"./Operator_Type\";\r\n import  Materialspecificationcontents  from \"./Materialspecificationcontents\";\r\n// import TestingStandard from \"./TestingStandard\"\r\n// import SpecialTestingStandard from \"./SpecialTestingStandard\"\r\n// import Plants from \"./Plants\"\r\n// import Department from \"./Department\"\r\n// import Employees from \"./Employees\"\r\n\r\nconst TabPane = Tabs.TabPane;\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Manage_User_Roles = ({match}) => {\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [keys,setkeys] = useState('1')\r\n  const callback = (key) => {\r\n    setkeys(key);\r\n  };\r\n  return (\r\n    <div>\r\n<BreadCrumb> <i className=\"icon icon-menu-right\"/> <Link to=\"/sample\">Home</Link><i className=\"icon icon-menu-right\"/> <span onClick={()=>setvisible(true)}>Settings</span><i className=\"icon icon-menu-right\"/><Link to=\"/Manage_User_Roles\">Manage User Roles</Link>  </BreadCrumb>\r\n{/* <div className=\"bread_crumb\"> */}\r\n<Materialspecificationcontents />\r\n{/* <Tabs className=\"customize_tab\"  activeKey={keys} onChange={callback}>\r\n        <TabPane tab=\"Size\" key=\"1\"><Size /> </TabPane>\r\n        <TabPane tab=\"Bore\" key=\"2\"><Bore /></TabPane>\r\n        <TabPane tab=\"Class\" key=\"3\"><Class /></TabPane>\r\n        <TabPane tab=\"Working Pressure\" key=\"4\"><Working_Pressure /></TabPane>\r\n        <TabPane tab=\"End Connection\" key=\"5\"><End_Connection /></TabPane>\r\n        <TabPane tab=\"Operator Type\" key=\"6\"><Operator_Type /></TabPane>\r\n        {/* <TabPane tab=\"Employees\" key=\"4\"> <Employees /> </TabPane>\r\n        <TabPane tab=\"Suppliers\" key=\"5\">Content of Tab Pane 3</TabPane>\r\n        <TabPane tab=\"Customers\" key=\"6\">Content of Tab Pane 3</TabPane> */}\r\n      {/* </Tabs>  */}\r\n      <Setdrawer setvisible={setvisible} isvisible={isvisible} />\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Manage_User_Roles; "],"sourceRoot":""}