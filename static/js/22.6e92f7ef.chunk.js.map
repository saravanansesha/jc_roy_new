{"version":3,"sources":["components/BreadCrumbs.js","routes/Product_Group/index.js"],"names":["BreadCrumb","props","className","children","Option","Select","FormItem","OptGroup","Form","Item","Product_Group","match","data","useState","isvisible","setvisible","foredit","setforedit","isedit","setisedit","key","role","permissions","action","data_back","setdata","useForm","form","columns","title","dataIndex","render","text","row","index","filter","item","length","values","find_key","i","value1","indexOf","setFieldsValue","colSpan","initialValues","remember","name","onFinish","datason","map","forchange","remoedit","onFinishFailed","layout","label","rules","required","message","placeholder","style","width","onChange","value","type","htmlType","onClick","items","console","log","String","id","e","edit_field","target","getAttribute","data-index","for_databack","j","change_for_edit","to","pagination","pageSize","dataSource"],"mappings":"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","file":"static/js/22.6e92f7ef.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nlet BreadCrumb = (props) =>{\r\n\r\n    return (\r\n        <div className=\"bread_crumb\">\r\n{props.children}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BreadCrumb;","import React,{ useEffect, useState} from \"react\";  \r\nimport {Card, Divider, Table,Form,Input, Select,Button} from \"antd\";\r\nimport {Link,useLocation} from \"react-router-dom\";\r\nimport IntlMessages from \"util/IntlMessages\";\r\nimport BreadCrumb from \"../../components/BreadCrumbs\"\r\nimport Setdrawer from \"../../containers/Sidebar/setdrawer\"\r\nconst {Option, OptGroup} = Select;\r\nconst FormItem = Form.Item;\r\nconst Product_Group = ({match}) => {\r\n  const [isvisible,setvisible] = useState(false)\r\n  const [foredit,setforedit] = useState([])\r\n  // useEffect(()=>{\r\n  //   console.log('i working here')\r\n\r\n  // })\r\n  const[isedit,setisedit] = useState([])\r\n  const [data_back,setdata] = useState([\r\n    {\r\n      key: '1',\r\n      role: 'Role1',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '2',\r\n      role: 'Role2',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n      <button>\r\n          Edit\r\n      </button>\r\n      <button>\r\n          Delete\r\n      </button>\r\n    </div>,\r\n    },\r\n    {\r\n      key: '3',\r\n      role: 'Role3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '4',\r\n      role: 'Role1',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '5',\r\n      role: 'Role2',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    },\r\n    {\r\n      key: '6',\r\n      role: 'Role3',\r\n      permissions : 'permissions',\r\n      action : <div>\r\n        <button>\r\n            Edit\r\n        </button>\r\n        <button>\r\n            Delete\r\n        </button>\r\n      </div>,\r\n    }    \r\n  ])\r\n  const [form] = Form.useForm();\r\n  const columns = [\r\n    {\r\n      title: 'Role',\r\n      dataIndex: 'role',\r\n      key: 'role',\r\n      render: (text,row,index) => {\r\n       let check_presence =   foredit.filter((item)=>{    \r\n        return index == item.index\r\n        })\r\n      if(check_presence.length > 0){\r\n        function handleChange(value){\r\n          \r\n        }\r\n        let values = {\r\n\r\n        }\r\n        let find_key =  foredit.filter((item,i)=>{\r\n        return item.index == index\r\n        })\r\n        // console.log(check_presence,'there is a key')\r\n        find_key = find_key[0].key\r\n        \r\n        let value1 = data_back.filter((item)=>{\r\n          // console.log(item,'there is a key')\r\n          return item.key == find_key\r\n        })\r\n        values[`roles${index}`] = value1[0].role\r\n        values[`permissions${index}`] = value1[0].permissions\r\n        if(isedit.indexOf(index) == -1){\r\n          form.setFieldsValue(values)\r\n          setisedit((isedit)=>[...isedit,index])\r\n        }else{\r\n          if(isedit.indexOf(index) == -1){\r\n            \r\n          }          \r\n        }\r\n        function oncancel(){\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)          \r\n        }\r\n        function onFinish(values){\r\n          let datason = data_back.map((item)=>{\r\n            if(item.key == find_key){\r\n              let forchange = item\r\n              forchange.permissions = values[`permissions${index}`]\r\n              forchange.role = values[`roles${index}`]\r\n              return item\r\n            }else{\r\n              return item  \r\n            }\r\n            \r\n          })\r\n          let remoedit = foredit.filter((item)=>{\r\n            return item.key != find_key\r\n          })\r\n          setforedit(remoedit)\r\n          setdata(datason)\r\n          }\r\n        function onFinishFailed(){\r\n\r\n        }\r\n\r\n          return {\r\n            props:{colSpan:3},\r\n            children : (\r\n              // <>\r\n              // <div>\r\n                \r\n              // </div>\r\n              \r\n              // </>\r\n               <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem label={`Permissions`} rules={[{ required: true, message: 'Please input your username!\\'}' }]} name={`permissions${index}`}>\r\n\r\n<Input placeholder=\"Username\"/>\r\n</FormItem>\r\n<FormItem label={`Role`} rules={[{ required: true, message: 'Please select any one of the field'}]} name={`roles${index}`}>\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"Role1\">Role1</Option>\r\n          <Option value=\"Role2\">Role2</Option>\r\n          <Option value=\"Role3\">Role3</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    onClick={oncancel}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Form>\r\n          )}\r\n      }else{\r\n        return <span className=\"gx-link\">{text}</span>\r\n      }\r\n    // if(index == 0){\r\n    //   return{\r\n        // children : <><div style={{display : 'flex',flexDirection : 'column'}}><label>Name</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Age</label><input name=\"name\"></input></div><div style={{display : 'flex',flexDirection : 'column'}}><label>Address</label> <textarea></textarea></div> <button>Submit</button> </>,\r\n        // props:{colSpan:3}\r\n    //   }\r\n      \r\n    // }else{\r\n  \r\n    // }\r\n        \r\n    } ,\r\n    },\r\n    {\r\n      title: 'Permissions',\r\n      dataIndex: 'permissions',\r\n      key: 'permissions',\r\n      \r\n    \r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action'  ,\r\n    }\r\n  ];\r\n  let data = []\r\n  data = data_back.map((item,i)=>{\r\n    let check_presence =   foredit.filter((items)=>{    \r\n      console.log(String(item.key) == String(items.key),'i am here')\r\n      console.log(items.key,'i am here')\r\n      return String(item.key) == String(items.key)\r\n      })\r\n      \r\n      if(check_presence.length > 0){\r\n        return {\r\n          key : item.key,  \r\n          role : '',\r\n          permissions : '',\r\n          action : ''\r\n        }\r\n      }else{\r\n        return {\r\n\r\n          key : item.key,\r\n          role : item.role,\r\n          permissions : item.permissions,\r\n          action : <><div><button id={item.key} onClick={(e)=>{\r\n            let edit_field = {\r\n              key : e.target.id,\r\n              index : e.target.getAttribute('data-index')\r\n            }\r\n            setforedit((foredit)=>[...foredit,edit_field])\r\n          }} data-index={i} >Edit</button><button id={item.key} data-index={i} onClick={(e)=>{\r\n           let for_databack =   data_back.filter((item)=>{\r\n                return item.key != e.target.id\r\n           }) \r\n           let for_isedit =  for_databack.map((item,i)=>{\r\n            // console.log('there is a delete')\r\n                foredit.map((items,j)=>{\r\n                  if(item.key == items.key){\r\n                    if(items.index == i){\r\n                      // let setfor_edit = foredit[j]\r\n                      // console.log(setfor_edit,'there is a delete')\r\n                    }else{\r\n                      let change_for_edit = foredit\r\n                      change_for_edit[j].index = `${i}`\r\n                      setforedit(change_for_edit)\r\n                    }\r\n                  }\r\n                })\r\n           })\r\n           setdata(for_databack)\r\n          }}>Delete</button></div></> \r\n      }\r\n      }\r\n\r\n  })\r\n  function handleChange(){\r\n\r\n  }\r\n  \r\n\r\n  function onFinish(values){\r\n    \r\n    console.log(values,'i am here')\r\n    \r\n  }\r\n  function onFinishFailed(){\r\n\r\n  }\r\n  return (\r\n    <div>\r\n<BreadCrumb> <i className=\"icon icon-menu-right\"/> <Link to=\"/sample\">Home</Link><i className=\"icon icon-menu-right\"/> <span onClick={()=>setvisible(true)}>Settings</span><i className=\"icon icon-menu-right\"/><Link to=\"/Product_Group\">Manage User Roles</Link>  </BreadCrumb>\r\n      <h2 className=\"title gx-mb-4\"><IntlMessages id=\"sidebar.samplePage\"/></h2>\r\n\r\n      <div className=\"gx-d-flex justify-content-center\">\r\n        <h4>Manage_User_Roles</h4>\r\n      </div>\r\n      <Table className=\"gx-table-responsive\"     pagination={{ pageSize: 4}} columns={columns} dataSource={data}/>\r\n      {/* <Form\r\n          initialValues={{ remember: true }}\r\n          name=\"basic\"\r\n          form={form}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          layout=\"inline\">\r\n                     <FormItem rules={[{ required: true, message: 'Please input your username!\\'}' }]} name=\"uaername\">\r\n\r\n<Input placeholder=\"Username\"/>\r\n</FormItem>\r\n<FormItem rules={[{ required: true, message: 'Please select any one of the field'}]} name=\"roles\">\r\n<Select\r\n        \r\n        style={{width: 200}}\r\n        onChange={handleChange}\r\n      >\r\n          <Option value=\"05\">Role1</Option>\r\n          <Option value=\"06\">Role2</Option>\r\n          <Option value=\"07\">Role3</Option>\r\n      </Select>\r\n      </FormItem>\r\n          \r\n      <Button className=\"gx-mb-0\"\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n            >\r\n              Save\r\n            </Button>\r\n          </Form> */}\r\n      <Setdrawer setvisible={setvisible} isvisible={isvisible} />\r\n    </div>\r\n  );\r\n};\r\n    \r\nexport default Product_Group;\r\n"],"sourceRoot":""}